% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/daily_api.R
\docType{class}
\name{DailyApi}
\alias{DailyApi}
\title{Daily operations}
\format{
An \code{R6Class} generator object
}
\description{
DailyApi
}
\details{
AZMet API

REST API for the Arizona Meteorological Network (AZMet)

The version of the OpenAPI document: 1.0
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ v1_observations_daily_get } \emph{ Return daily direct and derived observations for all stations for the latest available day. }
Returns available daily direct and derived observations for all stations for the latest available day.

\itemize{
\item \emph{ @returnType } \link{InlineResponse200} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | An array of all direct and derived observations for all stations.

\item return type : InlineResponse200
\item response headers :

\tabular{ll}{
}
}

\strong{ v1_observations_daily_station_id_date_time_start_get } \emph{ Return daily direct and derived observations for a specific station and a specific date. }
Returns available daily direct and derived observations for a specific station and a specific date.

\itemize{
\item \emph{ @param } station_id character
\item \emph{ @param } date_time_start character
\item \emph{ @returnType } \link{InlineResponse2001} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Available daily direct and derived observations for the requested station and date.

\item return type : InlineResponse2001
\item response headers :

\tabular{ll}{
}
}

\strong{ v1_observations_daily_station_id_date_time_start_time_interval_get } \emph{ Return available daily direct and derived observations for a station over a time interval from a date. }
Returns available daily direct and derived observations for a specific station over a time interval from a specific date.

\itemize{
\item \emph{ @param } station_id character
\item \emph{ @param } date_time_start character
\item \emph{ @param } time_interval character
\item \emph{ @returnType } \link{InlineResponse2001} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Available daily direct and derived observations for a specific station over a time interval from a specific date

\item return type : InlineResponse2001
\item response headers :

\tabular{ll}{
}
}

\strong{ v1_observations_daily_station_id_get } \emph{ Return daily direct and derived observations for a specific station. }
Returns available daily direct and derived observations for a specific station.

\itemize{
\item \emph{ @param } station_id character
\item \emph{ @returnType } \link{InlineResponse2001} \cr

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | Successful return of daily direct and derived observations for a specific station.

\item return type : InlineResponse2001
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  v1_observations_daily_get  ####################

library(azmet)

#Return daily direct and derived observations for all stations for the latest available day.
api_instance <- DailyApi$new()

result <- tryCatch(
             
             # to save the result into a file, simply add the optional `data_file` parameter, e.g.
             # api_instance$v1_observations_daily_get(data_file = "result.txt"),
             
             
             api_instance$v1_observations_daily_get(),
             ApiException = function(ex) ex
          )
# In case of error, print the error object
if (!is.null(result$ApiException)) {
  print("Exception occurs when calling `v1_observations_daily_get`:")
  dput(result$ApiException$toString())
  
  # error object
  dput(result$ApiException$error_object$toJSONString())
  
} else {
  # deserialized response object
  print("The response is ...")
  dput(result$toString())
}



####################  v1_observations_daily_station_id_date_time_start_get  ####################

library(azmet)
var_station_id <- "station_id_example" # character | ID of station
var_date_time_start <- "date_time_start_example" # character | Date and time of data request start

#Return daily direct and derived observations for a specific station and a specific date.
api_instance <- DailyApi$new()

result <- tryCatch(
             
             # to save the result into a file, simply add the optional `data_file` parameter, e.g.
             # api_instance$v1_observations_daily_station_id_date_time_start_get(var_station_id, var_date_time_start, data_file = "result.txt"),
             
             
             api_instance$v1_observations_daily_station_id_date_time_start_get(var_station_id, var_date_time_start),
             ApiException = function(ex) ex
          )
# In case of error, print the error object
if (!is.null(result$ApiException)) {
  print("Exception occurs when calling `v1_observations_daily_station_id_date_time_start_get`:")
  dput(result$ApiException$toString())
  
  # error object
  dput(result$ApiException$error_object$toJSONString())
  
} else {
  # deserialized response object
  print("The response is ...")
  dput(result$toString())
}



####################  v1_observations_daily_station_id_date_time_start_time_interval_get  ####################

library(azmet)
var_station_id <- "station_id_example" # character | ID of station
var_date_time_start <- "date_time_start_example" # character | Datetime to start the interval
var_time_interval <- "time_interval_example" # character | The requested time interval

#Return available daily direct and derived observations for a station over a time interval from a date.
api_instance <- DailyApi$new()

result <- tryCatch(
             
             # to save the result into a file, simply add the optional `data_file` parameter, e.g.
             # api_instance$v1_observations_daily_station_id_date_time_start_time_interval_get(var_station_id, var_date_time_start, var_time_interval, data_file = "result.txt"),
             
             
             api_instance$v1_observations_daily_station_id_date_time_start_time_interval_get(var_station_id, var_date_time_start, var_time_interval),
             ApiException = function(ex) ex
          )
# In case of error, print the error object
if (!is.null(result$ApiException)) {
  print("Exception occurs when calling `v1_observations_daily_station_id_date_time_start_time_interval_get`:")
  dput(result$ApiException$toString())
  
  # error object
  dput(result$ApiException$error_object$toJSONString())
  
} else {
  # deserialized response object
  print("The response is ...")
  dput(result$toString())
}



####################  v1_observations_daily_station_id_get  ####################

library(azmet)
var_station_id <- "station_id_example" # character | ID of station

#Return daily direct and derived observations for a specific station.
api_instance <- DailyApi$new()

result <- tryCatch(
             
             # to save the result into a file, simply add the optional `data_file` parameter, e.g.
             # api_instance$v1_observations_daily_station_id_get(var_station_id, data_file = "result.txt"),
             
             
             api_instance$v1_observations_daily_station_id_get(var_station_id),
             ApiException = function(ex) ex
          )
# In case of error, print the error object
if (!is.null(result$ApiException)) {
  print("Exception occurs when calling `v1_observations_daily_station_id_get`:")
  dput(result$ApiException$toString())
  
  # error object
  dput(result$ApiException$error_object$toJSONString())
  
} else {
  # deserialized response object
  print("The response is ...")
  dput(result$toString())
}



}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DailyApi-new}{\code{DailyApi$new()}}
\item \href{#method-DailyApi-v1_observations_daily_get}{\code{DailyApi$v1_observations_daily_get()}}
\item \href{#method-DailyApi-v1_observations_daily_get_with_http_info}{\code{DailyApi$v1_observations_daily_get_with_http_info()}}
\item \href{#method-DailyApi-v1_observations_daily_station_id_date_time_start_get}{\code{DailyApi$v1_observations_daily_station_id_date_time_start_get()}}
\item \href{#method-DailyApi-v1_observations_daily_station_id_date_time_start_get_with_http_info}{\code{DailyApi$v1_observations_daily_station_id_date_time_start_get_with_http_info()}}
\item \href{#method-DailyApi-v1_observations_daily_station_id_date_time_start_time_interval_get}{\code{DailyApi$v1_observations_daily_station_id_date_time_start_time_interval_get()}}
\item \href{#method-DailyApi-v1_observations_daily_station_id_date_time_start_time_interval_get_with_http_info}{\code{DailyApi$v1_observations_daily_station_id_date_time_start_time_interval_get_with_http_info()}}
\item \href{#method-DailyApi-v1_observations_daily_station_id_get}{\code{DailyApi$v1_observations_daily_station_id_get()}}
\item \href{#method-DailyApi-v1_observations_daily_station_id_get_with_http_info}{\code{DailyApi$v1_observations_daily_station_id_get_with_http_info()}}
\item \href{#method-DailyApi-clone}{\code{DailyApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DailyApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_get"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_get}{}}}
\subsection{Method \code{v1_observations_daily_get()}}{
Return daily direct and derived observations for all stations for the latest available day.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_get(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
InlineResponse200
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_get_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_get_with_http_info}{}}}
\subsection{Method \code{v1_observations_daily_get_with_http_info()}}{
Return daily direct and derived observations for all stations for the latest available day.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_get_with_http_info(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (InlineResponse200) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_station_id_date_time_start_get"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_station_id_date_time_start_get}{}}}
\subsection{Method \code{v1_observations_daily_station_id_date_time_start_get()}}{
Return daily direct and derived observations for a specific station and a specific date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_station_id_date_time_start_get(
  station_id,
  date_time_start,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{station_id}}{ID of station}

\item{\code{date_time_start}}{Date and time of data request start}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
InlineResponse2001
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_station_id_date_time_start_get_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_station_id_date_time_start_get_with_http_info}{}}}
\subsection{Method \code{v1_observations_daily_station_id_date_time_start_get_with_http_info()}}{
Return daily direct and derived observations for a specific station and a specific date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_station_id_date_time_start_get_with_http_info(
  station_id,
  date_time_start,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{station_id}}{ID of station}

\item{\code{date_time_start}}{Date and time of data request start}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (InlineResponse2001) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_station_id_date_time_start_time_interval_get"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_station_id_date_time_start_time_interval_get}{}}}
\subsection{Method \code{v1_observations_daily_station_id_date_time_start_time_interval_get()}}{
Return available daily direct and derived observations for a station over a time interval from a date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_station_id_date_time_start_time_interval_get(
  station_id,
  date_time_start,
  time_interval,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{station_id}}{ID of station}

\item{\code{date_time_start}}{Datetime to start the interval}

\item{\code{time_interval}}{The requested time interval}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
InlineResponse2001
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_station_id_date_time_start_time_interval_get_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_station_id_date_time_start_time_interval_get_with_http_info}{}}}
\subsection{Method \code{v1_observations_daily_station_id_date_time_start_time_interval_get_with_http_info()}}{
Return available daily direct and derived observations for a station over a time interval from a date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_station_id_date_time_start_time_interval_get_with_http_info(
  station_id,
  date_time_start,
  time_interval,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{station_id}}{ID of station}

\item{\code{date_time_start}}{Datetime to start the interval}

\item{\code{time_interval}}{The requested time interval}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (InlineResponse2001) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_station_id_get"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_station_id_get}{}}}
\subsection{Method \code{v1_observations_daily_station_id_get()}}{
Return daily direct and derived observations for a specific station.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_station_id_get(
  station_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{station_id}}{ID of station}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
InlineResponse2001
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-v1_observations_daily_station_id_get_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-v1_observations_daily_station_id_get_with_http_info}{}}}
\subsection{Method \code{v1_observations_daily_station_id_get_with_http_info()}}{
Return daily direct and derived observations for a specific station.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$v1_observations_daily_station_id_get_with_http_info(
  station_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{station_id}}{ID of station}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (InlineResponse2001) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DailyApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DailyApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DailyApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
